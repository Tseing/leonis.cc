<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Leo's blog</title><link href="https://tseing.github.io/" rel="alternate"></link><link href="https://tseing.github.io/feed.xml" rel="self"></link><id>https://tseing.github.io/</id><updated>2022-08-14T00:00:00+08:00</updated><subtitle>A nook to hoard my manuscripts.</subtitle><entry><title>使用 prettymaps 生成精美地图</title><link href="https://tseing.github.io/sui-sui-nian/2022-08-14-prettymaps-generate-maps.html" rel="alternate"></link><published>2022-08-14T00:00:00+08:00</published><updated>2022-08-14T00:00:00+08:00</updated><author><name>Leo</name></author><id>tag:tseing.github.io,2022-08-14:/sui-sui-nian/2022-08-14-prettymaps-generate-maps.html</id><summary type="html">&lt;p&gt;经过&lt;a href="https://tseing.github.io/sui-sui-nian/2022-08-11-prettymaps-install.html"&gt;上次&lt;/a&gt;的屡次踩坑，终于艰难地在 Windows 上安装好了 prettymaps。看着 &lt;code&gt;pip list&lt;/code&gt; 中的 &lt;code&gt;prettymaps&lt;/code&gt;，我迫不及待地想试着用 &lt;code&gt;prettymaps&lt;/code&gt; 生成一些地图，那么就开 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;经过&lt;a href="https://tseing.github.io/sui-sui-nian/2022-08-11-prettymaps-install.html"&gt;上次&lt;/a&gt;的屡次踩坑，终于艰难地在 Windows 上安装好了 prettymaps。看着 &lt;code&gt;pip list&lt;/code&gt; 中的 &lt;code&gt;prettymaps&lt;/code&gt;，我迫不及待地想试着用 &lt;code&gt;prettymaps&lt;/code&gt; 生成一些地图，那么就开始吧。&lt;/p&gt;
&lt;h2 id="attributeerror-cuo-wu"&gt;AttributeError 错误&lt;/h2&gt;
&lt;p&gt;先运行作者给出的示例代码试验一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;prettymaps&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;


&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;constrained_layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;layers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'Pra&amp;ccedil;a Ferreira do Amaral, Macau'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;layers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'perimeter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
            &lt;span class="s1"&gt;'streets'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'custom_filter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'["highway"~"motorway|trunk|primary|secondary|tertiary|residential|service|unclassified|pedestrian|footway"]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'width'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'motorway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'trunk'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'primary'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'secondary'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'tertiary'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'residential'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'service'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'unclassified'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'pedestrian'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'footway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'building'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'building'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'landuse'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'construction'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s1"&gt;'union'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'water'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'natural'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'water'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bay'&lt;/span&gt;&lt;span class="p"&gt;]}},&lt;/span&gt;
            &lt;span class="s1"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'landuse'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'grass'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'natural'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'island'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wood'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'leisure'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'park'&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
            &lt;span class="s1"&gt;'forest'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'landuse'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'forest'&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
            &lt;span class="s1"&gt;'parking'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'amenity'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'parking'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'highway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'pedestrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'man_made'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'pier'&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;drawing_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'background'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#F2F4CB'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#dadbc1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hatch'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'ooo...'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'perimeter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#F2F4CB'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#dadbc1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hatch'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'ooo...'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#D0F1BF'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'forest'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#64B96A'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'water'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#a1e3ff'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hatch'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'ooo...'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hatch_c'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#85c9e6'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'parking'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#F2F4CB'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'streets'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#475657'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'alpha'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'building'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'palette'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'#FFC857'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'#E9724C'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'#C5283D'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;

        &lt;span class="n"&gt;osm_credit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'color'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savefig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'macao.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是拋出了错误，提示 &lt;code&gt;AttributeError: 'DataFrame' object has no attribute 'crs'&lt;/code&gt;。在 &lt;a href="https://github.com/marceloprates/prettymaps/issues/88"&gt;Github&lt;/a&gt; 上有人给出了解决方案，原因是 &lt;code&gt;osmnx&lt;/code&gt; 的版本过低，直接 &lt;code&gt;pip install osmnx==1.2.1&lt;/code&gt; 就可以解决。&lt;/p&gt;
&lt;p&gt;需要注意的是，pip 可能会给出错误信息提示 &lt;code&gt;osmnx==1.2.1&lt;/code&gt; 与 &lt;code&gt;prettymaps&lt;/code&gt; 不兼容。但同样给出了已成功安装 &lt;code&gt;osmnx==1.2.1&lt;/code&gt; 的信息。经过我的尝试 &lt;code&gt;prettymaps&lt;/code&gt; 是可以正常工作的，所以这条错误信息可能没有什么影响。&lt;/p&gt;
&lt;h2 id="chu-kui-prettymapsplot-han-shu"&gt;初窥 prettymaps.plot() 函数&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;prettymaps&lt;/code&gt; 是在 &lt;code&gt;matplotlib&lt;/code&gt; 画布上绘制地图的，所以主要参数与 &lt;code&gt;matplotlib&lt;/code&gt; 的写法相同，用于调整颜色或文本，不甚重要。而用于生成地图的 &lt;code&gt;prettymaps.plot()&lt;/code&gt; 函数就比较关键，比较常用参数的就以下几项：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="c1"&gt;# 地图的中心点，可以是地名的字符串，也可以经纬度的元组&lt;/span&gt;
    &lt;span class="s1"&gt;'query'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;# 地图半径，单位为米&lt;/span&gt;
    &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;# 将 x 轴绑定至画布 x 轴&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;# OpenStreetMap 地图层信息，复制示例代码即可&lt;/span&gt;
    &lt;span class="n"&gt;layers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'perimeter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="c1"&gt;# 绘图模式，留空即为默认的圆形&lt;/span&gt;
             &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="c1"&gt;# 图层样式，如颜色等&lt;/span&gt;
    &lt;span class="n"&gt;drawing_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="c1"&gt;# 版权信息&lt;/span&gt;
    &lt;span class="n"&gt;osm_credit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="yuan-xing-mo-shi"&gt;圆形模式&lt;/h2&gt;
&lt;p&gt;与示例代码相同，只要将 &lt;code&gt;perimeter&lt;/code&gt; 留空，默认的绘图模式就是圆形模式。&lt;/p&gt;
&lt;p&gt;&lt;img alt="上海外滩" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7539?authkey=ALYpzW-ZQ_VBXTU"/&gt;
&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;🧭 &lt;i&gt;外滩  The Bund, Shanghai&lt;/i&gt;&lt;/p&gt;
&lt;h2 id="yuan-jiao-ju-xing-mo-shi"&gt;圆角矩形模式&lt;/h2&gt;
&lt;p&gt;圆角矩形模式下，需要新建一个变量 &lt;code&gt;dilate&lt;/code&gt; 用于控制圆角半径，将图层参数设置为 &lt;code&gt;perimeter: {'circle': False, 'dilate': dilate}&lt;/code&gt; 并在每一个图层的参数中添加 &lt;code&gt;perimeter: {'circle': False, 'dilate': dilate}&lt;/code&gt; 就能生成圆角矩形地图。&lt;/p&gt;
&lt;p&gt;在各个图层中添加键值时要注意括号的嵌套，特别容易出错，可以复制以下代码修改。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;dilate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="n"&gt;palette&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'#F4A460'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'#FA8072'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;layers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;26.08594&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;119.29199&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;layers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'perimeter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"circle"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"dilate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dilate&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'streets'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'custom_filter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'["highway"~"motorway|trunk|primary|secondary|tertiary|residential|service|unclassified|pedestrian|footway"]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'width'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'motorway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'trunk'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'primary'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'secondary'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'tertiary'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'residential'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'service'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'unclassified'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'pedestrian'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'footway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="s1"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'dilate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dilate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'building'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'building'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'landuse'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'construction'&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="s1"&gt;'union'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'dilate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dilate&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'water'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'natural'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'water'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bay'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="s1"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'dilate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dilate&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'landuse'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'grass'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'natural'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'island'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wood'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="s1"&gt;'leisure'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'park'&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="s1"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'dilate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dilate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'forest'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'landuse'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'forest'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="s1"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'dilate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dilate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'parking'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'amenity'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'parking'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'highway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'pedestrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'man_made'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'pier'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="s1"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'dilate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dilate&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;drawing_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'background'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#F2F4CB'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#dadbc1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hatch'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'ooo...'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'perimeter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#F2F4CB'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#dadbc1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hatch'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'ooo...'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#D0F1BF'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'forest'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#64B96A'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'water'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#a1e3ff'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hatch'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'ooo...'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hatch_c'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#85c9e6'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'parking'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#F2F4CB'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'streets'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#475657'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'alpha'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'building'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'palette'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;palette&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;

        &lt;span class="n"&gt;osm_credit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'color'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="三坊七巷" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7540?authkey=ALYpzW-ZQ_VBXTU"/&gt;
&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;🧭 &lt;i&gt;三坊七巷  Sanfang Qixiang, Fuzhou&lt;/i&gt;&lt;/p&gt;
&lt;h2 id="fang-xing-mo-shi"&gt;方形模式&lt;/h2&gt;
&lt;p&gt;欲使地图布满整个方形画面，需要使用 &lt;code&gt;matplotlib&lt;/code&gt; 的命令，指定绘制出的 x 与 y 轴范围。只需要在圆角矩形的代码中末插入以下代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;xmin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ymin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xmax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ymax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'perimeter'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bounds&lt;/span&gt;
&lt;span class="n"&gt;dx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xmax&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xmin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ymax&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ymin&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;.2&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xmin&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xmax&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ymin&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ymax&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;变量 &lt;code&gt;a&lt;/code&gt; 表示裁去的四周比例。&lt;/p&gt;
&lt;p&gt;&lt;img alt="闽江" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7541?authkey=ALYpzW-ZQ_VBXTU"/&gt;
&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;🧭 &lt;i&gt;闽江  Min River, Fuzhou&lt;/i&gt;&lt;/p&gt;
&lt;h2 id="jin-jie-cao-zuo"&gt;进阶操作&lt;/h2&gt;
&lt;p&gt;但不止如此，我想讨论一些进阶的操作。&lt;code&gt;layers&lt;/code&gt; 参数指定了绘制的图层，在 &lt;code&gt;drawing_kwargs&lt;/code&gt; 中可以指定图层的样式，由底至上常见以下几个图层：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt; 画布的背景，可以参考圆形模式视图中四个角落的空白；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perimeter&lt;/code&gt; 图层的底层，如果没有图层覆盖，就表现为该图层的颜色，可以参考方形模式视图中的浅黄色；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;green&lt;/code&gt; &lt;code&gt;forest&lt;/code&gt; &lt;code&gt;water&lt;/code&gt; 等按字面意思理解即可，若想确定各个图层中 &lt;code&gt;tags&lt;/code&gt; 所代表的具体事物，见 &lt;a href="https://wiki.openstreetmap.org/wiki/Zh-hans:Map_Features"&gt;OpenStreetMap Wiki&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;drawing_kwargs&lt;/code&gt; 中的样式参数包括以下几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fc&lt;/code&gt; 图层的填充颜色；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ec&lt;/code&gt; 图层的轮廓颜色；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hatch&lt;/code&gt; 图层的填充纹理，具体设置见 &lt;a href="https://matplotlib.org/stable/gallery/shapes_and_collections/hatch_style_reference.html"&gt;matplolib 文档&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hatch_c&lt;/code&gt; 图层填充纹理的颜色；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alpha&lt;/code&gt; 图层的透明度；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lw&lt;/code&gt; 图层轮廓线条的宽度；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zorder&lt;/code&gt; 层数，决定了图层之间相互掩盖的关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有了以上认识之后，我们就能更加随心所欲地绘制想要的地图了。还有一个额外的小技巧，OpenStreetMap 提供了封闭元素，使用地址描述绘制地点，不设置 &lt;code&gt;radius&lt;/code&gt; 参数， &lt;code&gt;prettymaps&lt;/code&gt; 就会自动匹配封闭元素的边界，使用这个方式可以绘制指定场所的示意图、行政区的示意图。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;constrained_layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 画布颜色&lt;/span&gt;
&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;patch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_facecolor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#eee'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 边界向外扩张&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;postprocessing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'perimeter'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'perimeter'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;layers&lt;/span&gt;

&lt;span class="n"&gt;layers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;"北京大学, 5号, 颐和园路, 海淀区, 北京市, 100871, 中国"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;postprocessing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;postprocessing&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;layers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'perimeter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
            &lt;span class="s1"&gt;'streets'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'custom_filter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'["highway"~"residential|service|unclassified|pedestrian|footway"]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'width'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'residential'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'service'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'unclassified'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'pedestrian'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'footway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'building'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'building'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'landuse'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'construction'&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="s1"&gt;'union'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'water'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'natural'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'water'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'landuse'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'grass'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="s1"&gt;'natural'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'island'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wood'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="s1"&gt;'leisure'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'park'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'garden'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'leisure'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'leisure'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'pitch'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'playground'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'parking'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s1"&gt;'amenity'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'parking'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'highway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'pedestrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'man_made'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'pier'&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;drawing_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'background'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#eee'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'perimeter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#F2F4CB'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'linestyle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'dashed'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#D0F1BF'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'leisure'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#aae0cb'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'water'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#a1e3ff'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'parking'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#F2F4CB'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'streets'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'fc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'alpha'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'building'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'palette'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'#FFC857'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'#E9724C'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'#C5283D'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'ec'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lw'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'zorder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;

        &lt;span class="n"&gt;osm_credit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'color'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#2F3737'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savefig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'pku.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于 &lt;code&gt;prettymaps&lt;/code&gt; 的封闭边界太过于靠近建筑，可以使用 &lt;code&gt;buffer()&lt;/code&gt; 将边界向外扩张一部分，能获得更好的视觉效果。&lt;/p&gt;
&lt;p&gt;&lt;img alt="北京大学" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7542?authkey=ALYpzW-ZQ_VBXTU"/&gt;
&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;🧭 &lt;i&gt;北京大学  Peking University, Beijing&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;调用相应的图层标签，还可以绘制铁路、地铁线路。以下代码调用了了铁路、地铁、站台并将这些元素各自组合为图层：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s1"&gt;'railway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'custom_filter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'["railway"~"rail"]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'width'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'dilate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dilate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="s1"&gt;'subway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"railway"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"subway"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'dilate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dilate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="s1"&gt;'platform'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'railway'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'platform'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'dilate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dilate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="天津站" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7543?authkey=ALYpzW-ZQ_VBXTU"/&gt;
&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;🧭 &lt;i&gt;天津站  Tianjin Railway Station, Tianjin&lt;/i&gt;&lt;/p&gt;
&lt;h2 id="zi-ji-de-hua"&gt;自己的话&lt;/h2&gt;
&lt;p&gt;不得不说，&lt;code&gt;prettymaps&lt;/code&gt; 是一款十分优秀的 Python 绘图包，它的操作十分简单，足以让我这样不了解 GIS 的用户迅速入门，绘制出十分惊艳的地图。但在实际使用中， &lt;code&gt;prettymaps&lt;/code&gt; 还是存在着这样那样的问题，使得它的定位可能只能止步于一个发挥创意的工具，而不能成为一个合适的创作工具。&lt;/p&gt;
&lt;p&gt;譬如说，各种各样的用户因为各种各样的需求接触到 &lt;code&gt;prettymaps&lt;/code&gt;，其中不乏有些用户想为某些场所、学校绘制导览地图，但 &lt;code&gt;prettymaps&lt;/code&gt; 添加元素的方式不够灵活，这会让这些用户使用起来相当费劲。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;prettymaps&lt;/code&gt; 的数据基于 OpenStreetMap，因为国内这样那样的相关法律法规，注定了 OpenStreetMap 的国内贡献者特别少，这对于开源项目来说几乎是致命的。由于 OpenStreetMap 缺少国内数据，使用 &lt;code&gt;prettymaps&lt;/code&gt; 绘制国内城市的地图是相当力不从心的。&lt;/p&gt;
&lt;p&gt;这方面具体表现为大面积缺失建筑，绘制的地图上十分空旷；缺少海洋、海岸线数据，绘制近海区域时呈现为大片空白等等。&lt;/p&gt;
&lt;p&gt;OpenStreetMap 的封闭边界是非常亮眼的功能，在 &lt;code&gt;prettymaps&lt;/code&gt; 中用字符描述地点就能绘制出行政区、建筑群等等。但从另一个方面考虑，OpenStreetMap 的封闭边界是由用户贡献的，所以在涉边境线、涉敏感地区时务必小心。&lt;/p&gt;
&lt;p&gt;总而言之，&lt;code&gt;prettymaps&lt;/code&gt; 为我们提供了另一个视角，让我们俯瞰日常生活的这座城市。而 OpenStreetMap 则是一个伟大的项目，它借助所有人的力量去描绘我们所生活的这个世界，这个理念闪耀着国际主义与理想主义的光芒。&lt;/p&gt;</content><category term="碎碎念"></category><category term="prettymaps"></category><category term="Python"></category><category term="matplotlib"></category><category term="OpenStreetMap"></category></entry><entry><title>在 Windows 安装 prettymaps 的踩坑实录</title><link href="https://tseing.github.io/sui-sui-nian/2022-08-11-prettymaps-install.html" rel="alternate"></link><published>2022-08-11T00:00:00+08:00</published><updated>2022-08-11T00:00:00+08:00</updated><author><name>Leo</name></author><id>tag:tseing.github.io,2022-08-11:/sui-sui-nian/2022-08-11-prettymaps-install.html</id><summary type="html">&lt;p&gt;prettymaps 是一个 Python 地图绘图包，在 matplotlib 绘图包的助力下能够绘制出十分精美的地图。但是 prettymaps 在 Windows 下的安装十分恼人，这篇笔记记录下了安装过程中的常见错误。&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;prettymaps&lt;/code&gt; 是一个 Python 地图绘图包，能够使用 OpenStreetMap 的地图数据，在 &lt;code&gt;matplotlib&lt;/code&gt; 绘图包的助力下能够绘制出十分精美、极具艺术感的地图。但是 &lt;code&gt;prettymaps&lt;/code&gt; 在 Windows 下的安装十分恼人，这篇笔记记录下了安装过程中的常见错误。&lt;/p&gt;
&lt;h2 id="chang-shi-zhi-jie-shi-yong-pip-an-zhuang"&gt;尝试直接使用 pip 安装&lt;/h2&gt;
&lt;p&gt;在项目的 &lt;a href="https://github.com/marceloprates/prettymaps"&gt;Github 仓库&lt;/a&gt;中，作者提供的方法是直接通过 &lt;code&gt;pip install prettymaps&lt;/code&gt; 安装，但是在 Windows 设备上貌似不起作用。命令行信息提示在安装 &lt;code&gt;Fiona&lt;/code&gt; 时发生错误，错误信息如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cached&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Fiona&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;21.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Preparing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;exited&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;&amp;times;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;egg_info&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;did&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;successfully&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;&amp;boxv;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;╰&amp;boxh;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GDAL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;must&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specified&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Provide&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gdal&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GDAL_CONFIG&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GDAL_VERSION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;originates&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;likely&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;problem&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;failed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="err"&gt;&amp;times;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Encountered&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;generating&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;╰&amp;boxh;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;See&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;an&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;issue&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mentioned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;hint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;See&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;details&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里我们需要先明确一下 &lt;code&gt;prettymaps&lt;/code&gt; 的依赖：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;- prettymaps
╰&amp;boxh;&amp;gt; - Fiona
    ╰&amp;boxh;&amp;gt; - GDAL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再根据错误信息，也就是在安装 &lt;code&gt;Fiona&lt;/code&gt; 依赖时调用的 &lt;code&gt;GDAL&lt;/code&gt; 未正确配置，我的设备上没有安装 &lt;code&gt;GDAL&lt;/code&gt;，所以需要先安装 &lt;code&gt;GDAL&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id="an-zhuang-gdal-corebu-tui-jian"&gt;安装 GDAL core（不推荐）&lt;/h2&gt;
&lt;p&gt;可以先尝试直接 &lt;code&gt;pip install gdal&lt;/code&gt;，不出意外的话会有以下错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gdalconst_wrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2703&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fatal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;C1083&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;无法打开包括文件&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;ldquo;&lt;/span&gt;&lt;span class="n"&gt;gdal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="err"&gt;&amp;rdquo;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;No&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;such&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gdal_array_wrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2829&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fatal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;C1083&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;无法打开包括文件&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;ldquo;&lt;/span&gt;&lt;span class="n"&gt;gdal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="err"&gt;&amp;rdquo;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;No&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;such&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gnm_wrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2820&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fatal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;C1083&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;无法打开包括文件&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;ldquo;&lt;/span&gt;&lt;span class="n"&gt;gdal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="err"&gt;&amp;rdquo;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;No&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;such&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ogr_wrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2838&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fatal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;C1083&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;无法打开包括文件&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;ldquo;&lt;/span&gt;&lt;span class="n"&gt;gdal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="err"&gt;&amp;rdquo;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;No&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;such&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;osr_wrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2879&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fatal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;C1083&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;无法打开包括文件&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;ldquo;&lt;/span&gt;&lt;span class="n"&gt;cpl_string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="err"&gt;&amp;rdquo;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;No&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;such&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gdal_wrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2883&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fatal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;C1083&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;无法打开包括文件&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;ldquo;&lt;/span&gt;&lt;span class="n"&gt;cpl_port&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="err"&gt;&amp;rdquo;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;No&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;such&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是因为 Windows 缺少 Linux 自带的 GDAL core，一个解决方法就是在 Windows 上安装 GDAL core。因为这个过程无比繁琐，而且我不是 GIS 从业者，没有使用其他依赖于 GDAL core 软件的需要，所以我最后没有采取这种方法。&lt;/p&gt;
&lt;p&gt;但一开始我并未意识到安装 GDAL core 如此麻烦，以至于我也折腾了半天 GDAL core 的安装，我把这一解决方案的整个流程总结如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;安装 GDAL core&lt;/code&gt; ⇨ &lt;code&gt;安装 GDAL bindings&lt;/code&gt; ⇨ &lt;code&gt;设置 GDAL core 环境变量&lt;/code&gt; ⇨ &lt;code&gt;安装 Fiona&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 GDAL core 与 bindings，可以前往 &lt;a href="https://www.gisinternals.com/release.php"&gt;GISInternals&lt;/a&gt; 下载安装文件。因为我的设备上安装了 Visual Studio 2017，我就选择了 MSVC 2017 x64 版本。&lt;/p&gt;
&lt;p&gt;&lt;img alt="GISInternals首页" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7531?authkey=ALYpzW-ZQ_VBXTU"/&gt;&lt;/p&gt;
&lt;p&gt;要下载 GDAL core 和 bindings 两个安装文件，其中 bindings 需要与自己的 Python 版本匹配，下载完成后先安装 core 再安装 bindings。&lt;/p&gt;
&lt;p&gt;&lt;img alt="GISInternals下载文件" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7533?authkey=ALYpzW-ZQ_VBXTU"/&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，使用 pip 可以查询到 &lt;code&gt;GDAL&lt;/code&gt; 的安装信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; pip list
Package           Version
----------------- -------
GDAL              3.5.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时已经在 Python 中安装了 &lt;code&gt;GDAL&lt;/code&gt;，但还需要配置环境变量后才能安装 &lt;code&gt;Fiona&lt;/code&gt;。详细步骤可以参考&lt;a href="https://zhuanlan.zhihu.com/p/141226948"&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id="shi-yong-whl-wen-jian-an-zhuang-tui-jian"&gt;使用 .whl 文件安装（推荐）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;GDAL&lt;/code&gt; 与 &lt;code&gt;Fiona&lt;/code&gt; 不能直接通过 pip 安装是因为缺少 GDAL core，在不安装 GDAL core 的情况下，可以使用预编译的 &lt;code&gt;.whl&lt;/code&gt; 安装这两个依赖。UCI 的 &lt;a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#gdal"&gt;Python 拓展包仓库&lt;/a&gt;提供了这两个依赖的 &lt;code&gt;.whl&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;&lt;img alt="GDAL下载页面" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7530?authkey=ALYpzW-ZQ_VBXTU"/&gt;&lt;/p&gt;
&lt;p&gt;要注意文件名中的两个参数，cp 指 Python 版本，win 字段指 CPU 架构，也就是常说的 32 位或 64 位系统。因此我选择的就是 &lt;code&gt;GDAL‑3.4.3‑cp39‑cp39‑win_amd64.whl&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;将下载文件移入 Python 安装目录下的 &lt;code&gt;Scripts&lt;/code&gt; 文件夹中，在该文件夹中打开终端，能过以下命令尝试安装：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; pip install GDAL-3.4.3-cp39-cp39-win_amd64.whl
ERROR: Could not install packages due to an OSError: [Errno 22] Invalid argument
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;出现这个错误时我寻找了大量解决方法，当然，这个错误也没法解决，这纯粹是安装文件的问题。这个隐藏的坑浪费我大量时间，后来我发现将安装文件换成&lt;code&gt;3.3.3&lt;/code&gt;版本，就能成功安装了。&lt;/p&gt;
&lt;p&gt;但这还没结束，同样在 UCI 提供的仓库中下载 &lt;code&gt;Fiona&lt;/code&gt;，用同样的方法安装，这时就会发现 &lt;code&gt;Fiona&lt;/code&gt; 尝试卸载 &lt;code&gt;GDAL&lt;/code&gt; 并使用 pip 直接安装其他版本的 &lt;code&gt;GDAL&lt;/code&gt;。当然，结局就会和上面的情况一样，用 pip 直接安装是安装不上 &lt;code&gt;GDAL&lt;/code&gt; 的。&lt;/p&gt;
&lt;p&gt;这是因为这里还有一个隐藏的大坑，就是 &lt;code&gt;GDAL&lt;/code&gt; 与 &lt;code&gt;Fiona&lt;/code&gt; 的版本必须匹配，否则就会自动重新下载。经过大量尝试，Python 版本为 &lt;code&gt;3.9.10&lt;/code&gt; 的条件下，可以使用 &lt;code&gt;GDAL==3.3.2&lt;/code&gt; 与 &lt;code&gt;Fiona==1.8.20&lt;/code&gt;，这两个版本在 UCI 提供的仓库中都没有，我把下载链接放在后文。&lt;/p&gt;
&lt;p&gt;安装好这两个依赖后，就可以直接使用 &lt;code&gt;pip install prettymaps&lt;/code&gt; 安装 &lt;code&gt;prettymaps&lt;/code&gt; 了。在 Python 交互模式下输入 &lt;code&gt;import prettymaps&lt;/code&gt;，若无错误信息，就成功安装好 &lt;code&gt;prettymaps&lt;/code&gt; 了。&lt;/p&gt;
&lt;h2 id="zong-jie"&gt;总结&lt;/h2&gt;
&lt;p&gt;Windows 下安装 &lt;code&gt;prettymaps&lt;/code&gt; 的错误是 &lt;code&gt;GDAL&lt;/code&gt; 与 &lt;code&gt;Fiona&lt;/code&gt; 两个依赖未能成功安装造成的，本质原因是 Windows 缺少 GDAL core。&lt;/p&gt;
&lt;p&gt;由于以上原因在 Windows 下未能成功安装 &lt;code&gt;prettymaps&lt;/code&gt; 的推荐解决步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装 &lt;a href="http://1drv.stdfirm.com/u/s!AtseC45rsRhNunGGuDYayQdVADT3?e=RAJEsi"&gt;GDAL-3.3.2-cp39-cp39-win_amd64.whl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装 &lt;a href="http://1drv.stdfirm.com/u/s!AtseC45rsRhNunAkPiG4AOb9V8yi?e=fAgNhp"&gt;Fiona-1.8.20-cp39-cp39-win_amd64.whl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install prettymaps&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="warn-info"&gt;
&lt;p&gt;&lt;i class="fa fa-exclamation-circle"&gt;&lt;/i&gt; &lt;b&gt;Warning: &lt;/b&gt;本文最后更新于 2022年08月11日，请确定内容是否过时。&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/32224877"&gt;Python中GDAL的安装 - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/141226948"&gt;windows10 环境中安装GDAL及其python绑定 - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/389235808"&gt;window 操作系统安装python的第三方包Fiona报错时解决方法 - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="碎碎念"></category><category term="prettymaps"></category><category term="Python"></category><category term="Windows"></category></entry><entry><title>《统计学习方法》第四章：朴素贝叶斯法</title><link href="https://tseing.github.io/sui-sui-nian/2022-08-05-statistical-learning-chapter4.html" rel="alternate"></link><published>2022-08-05T00:00:00+08:00</published><updated>2022-08-05T00:00:00+08:00</updated><author><name>Leo</name></author><id>tag:tseing.github.io,2022-08-05:/sui-sui-nian/2022-08-05-statistical-learning-chapter4.html</id><summary type="html">&lt;p&gt;《统计学习方法》第四章介绍的贝叶斯法利用了条件概率原理，通过贝叶斯法可以从事件的统计数据中反推出产生随机事件的概率模型。&lt;/p&gt;</summary><content type="html">&lt;h2 id="mo-xing"&gt;模型&lt;/h2&gt;
&lt;h3 id="tiao-jian-gai-lu"&gt;条件概率&lt;/h3&gt;
&lt;p&gt;引入贝叶斯法模型前，首先回顾一下条件概率的基本公式。所谓条件概率，就是在某事件 &lt;span class="math"&gt;\(B\)&lt;/span&gt; 发生的条件下，求另一事件 &lt;span class="math"&gt;\(A\)&lt;/span&gt; 发生的概率，条件概率可以通过下式计算：&lt;/p&gt;
&lt;div class="math"&gt;$$P(A|B)=\frac{P(AB)}{P(B)}$$&lt;/div&gt;
&lt;h4&gt;乘法公式&lt;/h4&gt;
&lt;p&gt;根据条件概率定义，可以得到&lt;/p&gt;
&lt;div class="math"&gt;$$P(A|B)=\frac{P(AB)}{P(B)}$$&lt;/div&gt;
&lt;div class="math"&gt;$$P(B|A)=\frac{P(AB)}{P(A)}$$&lt;/div&gt;
&lt;p&gt;显然有&lt;/p&gt;
&lt;div class="math"&gt;$$P(AB)=P(A)P(B|A)=P(B)P(A|B)$$&lt;/div&gt;
&lt;p&gt;该式就称为乘法公式。&lt;/p&gt;
&lt;h4&gt;全概率公式&lt;/h4&gt;
&lt;p&gt;若将&lt;em&gt;样本空间&lt;/em&gt; &lt;span class="math"&gt;\(\Omega\)&lt;/span&gt; 分割为&lt;em&gt;互不相容&lt;/em&gt;的各事件 &lt;span class="math"&gt;\(B_1,B_2,\cdots B_n\)&lt;/span&gt;，那么 &lt;span class="math"&gt;\(A\)&lt;/span&gt; 事件的概率就应当是 &lt;span class="math"&gt;\(A\)&lt;/span&gt; 的&lt;em&gt;所有&lt;/em&gt;条件概率与相应条件发生概率乘积之和：&lt;/p&gt;
&lt;div class="math"&gt;$$P(A)=\sum_{i=1}^nP(B_i)P(A|B_i)$$&lt;/div&gt;
&lt;p&gt;考虑 &lt;span class="math"&gt;\(A\)&lt;/span&gt; 与 &lt;span class="math"&gt;\(B\)&lt;/span&gt; 为两个事件的情况，利用全概系公式可以将事件 &lt;span class="math"&gt;\(A\)&lt;/span&gt; 发生的概率写为&lt;/p&gt;
&lt;div class="math"&gt;$$P(A)=P(B)P(A|B)+P(\bar{B})P(A|\bar{B})$$&lt;/div&gt;
&lt;h4&gt;贝叶斯公式&lt;/h4&gt;
&lt;p&gt;假设 &lt;span class="math"&gt;\(Y_1,Y_2,\cdots Y_n\)&lt;/span&gt; 是对样本空间的划分，&lt;span class="math"&gt;\(X\)&lt;/span&gt; 为样本空间中的一个事件，那么根据条件概率的定义，有&lt;/p&gt;
&lt;div class="math"&gt;$$P(Y_i|X)=\frac{P(XY_i)}{P(X)}$$&lt;/div&gt;
&lt;p&gt;利用乘法公式，该式可以写为&lt;/p&gt;
&lt;div class="math"&gt;$$P(Y_i|X)=\frac{P(X|Y_i)P(Y_i)}{P(X)}$$&lt;/div&gt;
&lt;p&gt;利用全概率公式，得到&lt;/p&gt;
&lt;div class="math"&gt;$$P(Y_i|X)=\frac{P(X|Y_i)P(Y_i)}{\sum_{j=1}^nP(X|Y_j)P(Y_j)}$$&lt;/div&gt;
&lt;p&gt;该式即为贝叶斯公式。&lt;/p&gt;
&lt;h3 id="po-su-bei-xie-si-fa-mo-xing"&gt;朴素贝叶斯法模型&lt;/h3&gt;
&lt;p&gt;假设训练集 &lt;span class="math"&gt;\(T=\{(x_1,y_1),(x_2,y_2),\cdots,(x_N,y_N)\}\)&lt;/span&gt; 是由 &lt;span class="math"&gt;\(P(X,Y)\)&lt;/span&gt; &lt;em&gt;独立同分布&lt;/em&gt;产生，其中输入为特征向量，输出为类标记。&lt;/p&gt;
&lt;p&gt;先验概率分布为&lt;/p&gt;
&lt;div class="math"&gt;$$P(Y=c_k),\qquad k=1,2,\cdots,K$$&lt;/div&gt;
&lt;p&gt;条件概率分布为&lt;/p&gt;
&lt;div class="math"&gt;$$P(X=x|Y=c_k)=P(X^{(1)}=x^{(1)},\cdots,X^{(n)}=x^{(n)}|Y=c_k)$$&lt;/div&gt;
&lt;p&gt;对条件概率分布作&lt;em&gt;条件独立性&lt;/em&gt;的假设，即认为某特征向量事件的各分量事件相互独立，因此该向量代表事件的发生概率为该向量的各分量概率乘积：&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}
    P(X=x|Y=c_k)&amp;amp;=P(X^{(1)}=x^{(1)},\cdots,X^{(n)}=x^{(n)}|Y=c_k)\\
    &amp;amp;=\prod_{j=1}^nP(X^{j}=x^{(j)}|Y=c_k)
\end{align}$$&lt;/div&gt;
&lt;p&gt;朴素贝叶斯法的目的在于通过模型计算输入 &lt;span class="math"&gt;\(x\)&lt;/span&gt; 后的后验概率分布 &lt;span class="math"&gt;\(P(Y=c_k|X=x)\)&lt;/span&gt; 并输出后验概率最大的 &lt;span class="math"&gt;\(c_k\)&lt;/span&gt; 作为 &lt;span class="math"&gt;\(x\)&lt;/span&gt; 的类。&lt;/p&gt;
&lt;p&gt;类比推导得到的贝叶斯公式&lt;/p&gt;
&lt;div class="math"&gt;$$P(Y_i|X)=\frac{P(X|Y_i)P(Y_i)}{\sum_{j=1}^nP(X|Y_j)P(Y_j)}$$&lt;/div&gt;
&lt;p&gt;后验概率分布可以表示为&lt;/p&gt;
&lt;div class="math"&gt;$$P(Y=c_k|X=x)=\frac{P(X=x|Y=c_k)P(Y=c_k)}{\sum_k P(X=x|Y=c_k)P(Y=c_k)}$$&lt;/div&gt;
&lt;p&gt;代入条件独立性假设，即有&lt;/p&gt;
&lt;div class="math"&gt;$$P(Y=c_k|X=x)=\frac{\color{orangered}{P(Y=c_k)\prod_jP(X^{(j)}=x^{(j)}|Y=c_k)}}{\sum_k P(Y=c_k)\prod_j P(X^{(j)}=x^{(j)}|Y=c_k)}$$&lt;/div&gt;
&lt;p&gt;其中不论 &lt;span class="math"&gt;\(c_k\)&lt;/span&gt; 为何值时，分母部分都是不变的，不影响发生概率大小的比较，因此朴素贝叶斯方法的模型可以表示为&lt;/p&gt;
&lt;div class="math"&gt;$$y=\arg \max_{c_k}\color{orangered}{P(Y=c_k)\prod_jP(X^{(j)}=x^{(j)}|Y=c_k)}$$&lt;/div&gt;
&lt;h2 id="ce-lue_1"&gt;策略&lt;/h2&gt;
&lt;p&gt;损失函数可以表示为&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{equation}
    L(Y,f(X))=
    \begin{cases}
        1, &amp;amp;Y\neq f(X)\\
        0, &amp;amp;Y=f(X)
    \end{cases}
\end{equation}$$&lt;/div&gt;
&lt;p&gt;期望风险函数为条件期望&lt;/p&gt;
&lt;div class="math"&gt;$$R_{\mathrm{exp}}(f)=E[L(Y,f(X))]=E_X\sum_{k=1}^K[L(c_k,f(X))]P(c_k|X)$$&lt;/div&gt;
&lt;p&gt;最小化期望风险就需要对 &lt;span class="math"&gt;\(X=x\)&lt;/span&gt; 逐个最小化：&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}
    f(x)&amp;amp;=\arg \min_{y\in\mathcal{Y}}\sum_{k=1}^KL(c_k,y)P(c_k|X=x)\\
    &amp;amp;=\arg \min_{y\in\mathcal{Y}}\sum_{k=1}^KP(y\neq c_k|X=x)\\
    &amp;amp;=\arg \min_{y\in\mathcal{Y}}(1-P(y=c_k|X=x))\\
    &amp;amp;=\arg \max_{y\in\mathcal{Y}}P(y=c_k|X=x)\\
\end{align}$$&lt;/div&gt;
&lt;p&gt;也就是说后验概率最大的情况下期望风险就最小，这正是朴素贝叶斯法决定输出类别的方法。&lt;/p&gt;
&lt;h2 id="suan-fa"&gt;算法&lt;/h2&gt;
&lt;h3 id="ji-da-si-ran-gu-ji"&gt;极大似然估计&lt;/h3&gt;
&lt;p&gt;使用频率估计概率，先验概率为&lt;/p&gt;
&lt;div class="math"&gt;$$\color{teal}{P(Y=c_k)}=\frac{\sum_{i=1}^NI(y_i=c_k)}{N}$$&lt;/div&gt;
&lt;p&gt;特征向量的第 &lt;span class="math"&gt;\(j\)&lt;/span&gt; 个分量 &lt;span class="math"&gt;\(x^{(j)}\)&lt;/span&gt; 可能取的值构成了集合 &lt;span class="math"&gt;\(\{a_{j1},a_{j2},\cdots,a_{jS_j}\}\)&lt;/span&gt;，那么条件概率为&lt;/p&gt;
&lt;div class="math"&gt;$$\color{steelblue}{P(X^{(j)}=a_{jl}|Y=c_k)}=\frac{\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)}{\sum_{i=1}^NI(y_i=c_k)}$$&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;算法 4.1&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入：训练集 &lt;span class="math"&gt;\(T\)&lt;/span&gt; 与实例 &lt;span class="math"&gt;\(x\)&lt;/span&gt;&lt;br/&gt;
输出：&lt;span class="math"&gt;\(x\)&lt;/span&gt; 的类别&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;计算先验概率 &lt;span class="math"&gt;\(\color{teal}{P(Y=c_k)}\)&lt;/span&gt; 与条件概率 &lt;span class="math"&gt;\(\color{steelblue}{P(X^{(j)}=a_{jl}|Y=c_k)}\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;应用条件独立性假设，计算 &lt;span class="math"&gt;\(P(Y=c_k)\prod_jP(X^{(j)}=x^{(j)}|Y=c_k)\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;确定 &lt;span class="math"&gt;\(x\)&lt;/span&gt; 的类别，&lt;span class="math"&gt;\(y=\arg \max_{c_k}P(Y=c_k)\prod_jP(X^{(j)}=x^{(j)}|Y=c_k)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="bei-xie-si-gu-ji"&gt;贝叶斯估计&lt;/h3&gt;
&lt;p&gt;在极大似然估计中可能会出现估计的概率为零，从而导致整个特征向量的估计概率也为零，影响估计结果。贝叶斯估计通过在频数上引入正数 &lt;span class="math"&gt;\(\lambda\)&lt;/span&gt; 从而避免了这种偏差：&lt;/p&gt;
&lt;div class="math"&gt;$$\color{teal}{P(Y=c_k)}=\frac{\sum_{i=1}^NI(y_i=c_k)+\color{orangered}{\lambda}}{N+\color{orangered}{K\lambda}}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\color{steelblue}{P_{\lambda}(X^{j}=a_{jl}|Y=c_k)}=\frac{\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)+\color{orangered}{\lambda}}{\sum_{i=1}^NI(y_i=c_k)+\color{orangered}{S_j\lambda}}$$&lt;/div&gt;
&lt;p&gt;若取 &lt;span class="math"&gt;\(\lambda=0\)&lt;/span&gt; 时就是极大似然估计，常取 &lt;span class="math"&gt;\(\lambda=1\)&lt;/span&gt;，称为拉普拉斯平滑。&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="references_1"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/33437381/"&gt;李航, 2019. 统计学习方法（第2版）. 清华大学出版社.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/5998092/"&gt;茆诗松, 程依明, 濮晓龙, 2011. 概率论与数理统计教程. 高等教育出版社.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="碎碎念"></category><category term="统计学习方法"></category><category term="Machine learning"></category><category term="Algorithm"></category></entry><entry><title>《统计学习方法》第三章：k 近邻法</title><link href="https://tseing.github.io/sui-sui-nian/2022-08-02-statistical-learning-chapter3.html" rel="alternate"></link><published>2022-08-02T00:00:00+08:00</published><updated>2022-08-02T00:00:00+08:00</updated><author><name>Leo</name></author><id>tag:tseing.github.io,2022-08-02:/sui-sui-nian/2022-08-02-statistical-learning-chapter3.html</id><summary type="html">&lt;p&gt;《统计学习方法》第三章介绍了 k 近邻模型，k 近邻模型原理十分简单，如何划分向量空间从而降低算法的时间复杂度就成为了更关键的问题。&lt;/p&gt;</summary><content type="html">&lt;h2 id="k-jin-lin-mo-xing"&gt;k 近邻模型&lt;/h2&gt;
&lt;p&gt;k 近邻法将输入实例的特征空间划分为若干子空间，子空间中的若干实例 &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 同属于 &lt;span class="math"&gt;\(y_i\)&lt;/span&gt; 类别。具体来说，k 近邻法通过在训练集中找到与新输入实例最邻近的 k 个实例，这 k 个实例大部分属于 &lt;span class="math"&gt;\(y_i\)&lt;/span&gt; 类别，就也将新输入实例归属为 &lt;span class="math"&gt;\(y_i\)&lt;/span&gt; 类别。&lt;/p&gt;
&lt;p&gt;&lt;img alt="k近邻模型" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7519?authkey=ALYpzW-ZQ_VBXTU"/&gt;&lt;/p&gt;
&lt;p&gt;训练集数据为&lt;/p&gt;
&lt;div class="math"&gt;$$
T=\{ (x_1,y_1),(x_2,y_2),\cdots,(x_N,y_N) \}
$$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(x_i\in\mathbf{R}^n\)&lt;/span&gt; 为特征向量，&lt;span class="math"&gt;\(y_i\in\{c_1,c_2,\cdots,c_K\}\)&lt;/span&gt; 为实例类别。k 近邻法根据&lt;em&gt;距离度量&lt;/em&gt;，在包括最邻近的 &lt;span class="math"&gt;\(k\)&lt;/span&gt; 个点的邻域 &lt;span class="math"&gt;\(N_k(x)\)&lt;/span&gt; 中确定 &lt;span class="math"&gt;\(x\)&lt;/span&gt; 的 类别 &lt;span class="math"&gt;\(y\)&lt;/span&gt;：&lt;/p&gt;
&lt;div class="math"&gt;$$y=\arg \max_{c_j}\sum_{x_i\in N_k(x)}I(y_i=c_i),\qquad i=1,2,\cdots,N;\ j=1,2,3,\cdots,K$$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(I\)&lt;/span&gt; 为指示函数，条件为真时为 &lt;span class="math"&gt;\(1\)&lt;/span&gt;，条件为假时为 &lt;span class="math"&gt;\(0\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id="ce-lue"&gt;策略&lt;/h2&gt;
&lt;h3 id="ju-chi-du-liang"&gt;距离度量&lt;/h3&gt;
&lt;p&gt;在二维、三维空间中通常使用欧氏距离来衡量两点间的远近关系（相似程度）：&lt;/p&gt;
&lt;div class="math"&gt;$$d=\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}$$&lt;/div&gt;
&lt;div class="math"&gt;$$d=\sqrt{(x_2-x_1)^2+(y_2-y_1)^2+(z_2-z_1)^2}$$&lt;/div&gt;
&lt;p&gt;在 &lt;span class="math"&gt;\(\mathbf{R}^n\)&lt;/span&gt; 空间中，更通常的距离度量是 &lt;span class="math"&gt;\(L_p\)&lt;/span&gt; 距离，&lt;span class="math"&gt;\(L_p\)&lt;/span&gt; 距离是由距离度量的概念通过推广得到的，因此同样具有衡量两点间远近关系（相似程度）的作用。&lt;/p&gt;
&lt;p&gt;设 &lt;span class="math"&gt;\(x_i,x_j\in\mathbf{R}^n\)&lt;/span&gt;，&lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 与 &lt;span class="math"&gt;\(x_j\)&lt;/span&gt; 的 &lt;span class="math"&gt;\(L_p\)&lt;/span&gt; 距离由下式给出：&lt;/p&gt;
&lt;div class="math"&gt;$$L_p(x_i,x_j)=\left(\sum_{l=1}^n|x_i^{(l)}-x_j^{(l)}|^p\right)^{\frac{1}{p}}$$&lt;/div&gt;
&lt;h3 id="fen-lei-ce-lue"&gt;分类策略&lt;/h3&gt;
&lt;p&gt;k 近邻法的分类遵循多数表决规则，即输入实例附近 &lt;span class="math"&gt;\(k\)&lt;/span&gt; 个邻近的训练实例的大多数类决定了预测结果。因此 k 近邻法中的 &lt;span class="math"&gt;\(k\)&lt;/span&gt; 值决定了在一定的距离度量内选取分类「参考点」的数量，可以想知，若选取的 &lt;span class="math"&gt;\(k\)&lt;/span&gt; 值太小，分类结果会对最近邻的几个点敏感，模型就趋于复杂，更容易发生过拟合。&lt;/p&gt;
&lt;h2 id="suan-fa_1"&gt;算法&lt;/h2&gt;
&lt;h3 id="gou-zao-kd-shu"&gt;构造 kd 树&lt;/h3&gt;
&lt;p&gt;kd 树是一种二叉树，kd 树通过对 &lt;span class="math"&gt;\(\mathbf{R}^n\)&lt;/span&gt; 空间中每一个维度&lt;em&gt;逐次地&lt;/em&gt;二分，最终将整个特征空间划分为若干超矩形，kd 树的每一个结点（训练实例）对应于一个超矩形。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;算法 3.2&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入：数据集 &lt;span class="math"&gt;\(T\)&lt;/span&gt;&lt;br/&gt;
输出：kd 树&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;选择 &lt;span class="math"&gt;\(x^{(1)}\)&lt;/span&gt; 为坐标轴，以所有实例的 &lt;span class="math"&gt;\(x_i^{(1)}\)&lt;/span&gt; 坐标中位数（若中位有两个数则取其中之一）为切分点，将 &lt;span class="math"&gt;\(x^{(1)}\)&lt;/span&gt; 切分为两部分。&lt;/li&gt;
&lt;li&gt;重复切分：深度为 &lt;span class="math"&gt;\(j\)&lt;/span&gt; 的结点，选择 &lt;span class="math"&gt;\(x^{(l)}\)&lt;/span&gt; 为切分坐标轴，&lt;span class="math"&gt;\(l=j\ \mathrm{mod}\ k+1\)&lt;/span&gt;。简单来说，&lt;ul&gt;
&lt;li&gt;对于 &lt;span class="math"&gt;\(\mathbf{R}^2\)&lt;/span&gt; 空间，步骤为 &lt;span class="math"&gt;\(x^{(1)}\rightarrow x^{(2)}\rightarrow x^{(1)}\rightarrow\cdots\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;对于 &lt;span class="math"&gt;\(\mathbf{R}^3\)&lt;/span&gt; 空间，步骤为 &lt;span class="math"&gt;\(x^{(1)}\rightarrow x^{(2)}\rightarrow x^{(3)}\rightarrow x^{(1)}\rightarrow\cdots\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;直至将所有实例点切分完成。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="构造kd树" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7523?authkey=ALYpzW-ZQ_VBXTU"/&gt;&lt;/p&gt;
&lt;h3 id="sou-suo-kd-shu"&gt;搜索 kd 树&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;算法 3.3&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入：kd 树，目标点 &lt;span class="math"&gt;\(S\)&lt;/span&gt;&lt;br/&gt;
输出：&lt;span class="math"&gt;\(S\)&lt;/span&gt; 的最近邻&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;首先在 kd 树中找出目标点 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 所属的区域，具体来说就是从根结点 &lt;span class="math"&gt;\(A\)&lt;/span&gt; 开始逐层向下访问，直到目标点 &lt;span class="math"&gt;\(S\)&lt;/span&gt;。在访问过程的具体算法方面，可以通过判断点 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 的坐标与切分点的大小关系来快速准确地确定访问路径。&lt;/li&gt;
&lt;li&gt;到达点 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 的父结点，以此结点作为 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 的「当前最近点」。&lt;/li&gt;
&lt;li&gt;递归向上层访问，每次访问进行两个操作：&lt;ol&gt;
&lt;li&gt;如果该点距离 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 更近，将其作为新的「当前最近点」。&lt;/li&gt;
&lt;li&gt;因为 kd 为二叉树，该点必然存在另一分支子结点，那么就需要检查分支下是否存在更近的点。具体做法是判断分支子结点的区域是否与以点 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 为圆心、以点 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 与「当前最近点」距离为半径的圆相交。&lt;ul&gt;
&lt;li&gt;若相交，则访问分支子结点并进行（3）步骤；&lt;/li&gt;
&lt;li&gt;若不相交，回退到上一层。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;最终回到根结点时，搜索结束。最后的「当前最近点」即为 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 的最近邻。&lt;/li&gt;
&lt;/ol&gt;
&lt;video controls=""&gt;
&lt;source src="https://api.onedrive.com/v1.0/shares/s!AtseC45rsRhNumKI-2A9UTX-DXZs/root/content" type="video/mp4"/&gt;
&lt;/video&gt;
&lt;hr/&gt;
&lt;h2 id="references_1"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/33437381/"&gt;李航, 2019. 统计学习方法（第2版）. 清华大学出版社.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1GM4y1c78K?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=a5a1b5dd5c760997f9e16b7806d64651"&gt;向量的【范数】：模长的推广，柯西不等式 - 哔哩哔哩&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="碎碎念"></category><category term="统计学习方法"></category><category term="Machine learning"></category><category term="Algorithm"></category></entry><entry><title>《统计学习方法》第二章：感知机</title><link href="https://tseing.github.io/sui-sui-nian/2022-07-27-statistical-learning-chapter2.html" rel="alternate"></link><published>2022-07-27T00:00:00+08:00</published><updated>2022-07-27T00:00:00+08:00</updated><author><name>Leo</name></author><id>tag:tseing.github.io,2022-07-27:/sui-sui-nian/2022-07-27-statistical-learning-chapter2.html</id><summary type="html">&lt;p&gt;《统计学习方法》的第二章介绍了一种二分类模型——感知机，感知机具有直观的几何模型，有助于理解分类原理。感知机采用随机梯度下降策略选择最佳模型，随机梯度下降也是常用的一种最优化方法。&lt;/p&gt;</summary><content type="html">&lt;h2 id="mo-xing"&gt;模型&lt;/h2&gt;
&lt;h3 id="ding-yi"&gt;定义&lt;/h3&gt;
&lt;p&gt;感知机是&lt;em&gt;二分类&lt;/em&gt;的&lt;em&gt;线性&lt;/em&gt;分类模型，感知机定义为&lt;/p&gt;
&lt;div class="math"&gt;$$f(x)=\mathrm{sign}(w\cdot x+b)$$&lt;/div&gt;
&lt;div class="math"&gt;$$\begin{equation}
    \mathrm{sign}(x)=
    \begin{cases}
        +1, &amp;amp;x\geqslant 0\\
        -1, &amp;amp;x&amp;lt;0
    \end{cases}
\end{equation}$$&lt;/div&gt;
&lt;p&gt;其中输入 &lt;span class="math"&gt;\(x\in \mathbf{R}^n\)&lt;/span&gt; 表示实例的特征向量，输出 &lt;span class="math"&gt;\(y\in \{+1,-1\}\)&lt;/span&gt;表示实例的类别。模型参数 &lt;span class="math"&gt;\(w\)&lt;/span&gt; 称为权值，参数 &lt;span class="math"&gt;\(b\)&lt;/span&gt; 称为偏置。&lt;/p&gt;
&lt;h3 id="ji-he-mo-xing"&gt;几何模型&lt;/h3&gt;
&lt;p&gt;若 &lt;span class="math"&gt;\(x\in \mathbf{R}^2\)&lt;/span&gt;,&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}
    w\cdot x+b&amp;amp;=0\\
    (w^{(1)},w^{(2)})^\mathrm{T}\cdot (x^{(1)},x^{(2)})^\mathrm{T}+b&amp;amp;=0\\
\end{align}$$&lt;/div&gt;
&lt;p&gt;该形式满足平面中的直线方程：&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}
    (i,j)^\mathrm{T}\cdot (x^{(1)},x^{(2)})^\mathrm{T}+b&amp;amp;=0\\
    ix^{(1)}+jx^{(2)}+b&amp;amp;=0
\end{align}$$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(w=(i,j)^\mathrm{T}\)&lt;/span&gt; 为直线法向量。&lt;/p&gt;
&lt;p&gt;类似地，当 &lt;span class="math"&gt;\(x\in \mathbf{R}^3\)&lt;/span&gt; 时，感知机模型满足空间中的平面方程：&lt;/p&gt;
&lt;div class="math"&gt;$$ix^{(1)}+jx^{(2)}+kx^{(3)}+b=0$$&lt;/div&gt;
&lt;p&gt;且 &lt;span class="math"&gt;\(w=(i,j,k)^\mathrm{T}\)&lt;/span&gt; 为平面法向量。&lt;/p&gt;
&lt;p&gt;因此，感知机在模型本质上是在特征空间 &lt;span class="math"&gt;\(\mathbf{R}^n\)&lt;/span&gt; 中的一个超平面 &lt;span class="math"&gt;\(S\)&lt;/span&gt;，代表特征向量的点被超平面 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 分隔成两部分，其中参数 &lt;span class="math"&gt;\(w\)&lt;/span&gt; 为超平面法向量。&lt;/p&gt;
&lt;p&gt;&lt;img alt="感知机的几何模型" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7509?authkey=ALYpzW-ZQ_VBXTU"/&gt;&lt;/p&gt;
&lt;p&gt;超平面 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 也应符合 &lt;span class="math"&gt;\(\mathbf{R}^n\)&lt;/span&gt; 空间中的几何关系，所以在 &lt;span class="math"&gt;\(\mathbf{R}^n\)&lt;/span&gt; 空间中的任意一点 &lt;span class="math"&gt;\(x_0\)&lt;/span&gt; 到超平面的距离为&lt;/p&gt;
&lt;div class="math"&gt;$$d=\frac{1}{||w||}|w\cdot x_0+b|$$&lt;/div&gt;
&lt;p&gt;&lt;span class="math"&gt;\(||w||\)&lt;/span&gt; 是 &lt;span class="math"&gt;\(w\)&lt;/span&gt; 的 &lt;span class="math"&gt;\(L_2\)&lt;/span&gt; 范数：&lt;/p&gt;
&lt;div class="math"&gt;$$||w||=\sqrt{\sum(w_i)^2}$$&lt;/div&gt;
&lt;p&gt;即法向量长度。&lt;/p&gt;
&lt;h4&gt;点到超平面距离&lt;/h4&gt;
&lt;p&gt;以 &lt;span class="math"&gt;\(x\in \mathbf{R}^2\)&lt;/span&gt; 为例，将超平面 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 方程转化为截距式：&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}
     ix^{(1)}+jx^{(2)}+b&amp;amp;=0\\
     \frac{x^{(1)}}{-\frac{b}{i}}+\frac{x^{(2)}}{-\frac{b}{j}}&amp;amp;=1
\end{align}$$&lt;/div&gt;
&lt;p&gt;超平面 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 在 &lt;span class="math"&gt;\(x^{(2)}\)&lt;/span&gt; 轴上的截距就为 &lt;span class="math"&gt;\(-\frac{b}{j}\)&lt;/span&gt;。过点 &lt;span class="math"&gt;\(x_0\)&lt;/span&gt; 作平行于 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 的超平面 &lt;span class="math"&gt;\(S_0\)&lt;/span&gt;，同样得到截距式：&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{x^{(1)}}{-\frac{b_0}{i}}+\frac{x^{(2)}}{-\frac{b_0}{j}}=1$$&lt;/div&gt;
&lt;p&gt;超平面 &lt;span class="math"&gt;\(S_0\)&lt;/span&gt; 在 &lt;span class="math"&gt;\(x^{(2)}\)&lt;/span&gt; 轴上的截距为 &lt;span class="math"&gt;\(-\frac{b_0}{j}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="示意图" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7518?authkey=ALYpzW-ZQ_VBXTU"/&gt;&lt;/p&gt;
&lt;p&gt;将 &lt;span class="math"&gt;\(d\)&lt;/span&gt; 平移至蓝色三角形中，&lt;span class="math"&gt;\(\boldsymbol{w}\)&lt;/span&gt; 是超平面的法向量，&lt;span class="math"&gt;\(\boldsymbol{w}=w=(i,j)^\mathrm{T}\)&lt;/span&gt;，根据向量夹角余弦公式&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}
    \cos\theta&amp;amp;=|\cos(\boldsymbol{w},\boldsymbol{j})|\\
    &amp;amp;=\frac{|\boldsymbol{w}\cdot\boldsymbol{j}|}{|\boldsymbol{w}||\boldsymbol{j}|}
\end{align}$$&lt;/div&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\boldsymbol{j}\)&lt;/span&gt; 为 &lt;span class="math"&gt;\(x^{(2)}\)&lt;/span&gt; 方向的单位向量，因此有&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}
    \cos\theta&amp;amp;=\frac{|(i,j)^\mathrm{T}\cdot(0,1)^\mathrm{T}|}{|\boldsymbol{w}|}\\
    &amp;amp;=\frac{|j|}{|\boldsymbol{w}|}
\end{align}$$&lt;/div&gt;
&lt;p&gt;在蓝色三角形中，&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}
    d&amp;amp;=\left|\frac{b}{j}-\frac{b_0}{j}\right|\cos\theta\\
    &amp;amp;=\frac{|b-b_0|}{|j|}\frac{|j|}{|\boldsymbol{w}|}\\
    &amp;amp;=\frac{|b-b_0|}{|\boldsymbol{w}|}\\
\end{align}$$&lt;/div&gt;
&lt;p&gt;由 &lt;span class="math"&gt;\(w\cdot x_0+b_0=0\)&lt;/span&gt; 得到 &lt;span class="math"&gt;\(b_0=-w\cdot x_0\)&lt;/span&gt;，代入就可以证得&lt;/p&gt;
&lt;div class="math"&gt;$$d=\frac{|w\cdot x_0+b|}{||w||}$$&lt;/div&gt;
&lt;h2 id="ce-lue_1"&gt;策略&lt;/h2&gt;
&lt;p&gt;感知机的分类情况可以归为以下几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(w\cdot x_i+b\geqslant0\)&lt;/span&gt;,&lt;span class="math"&gt;\(\ y_i=+1\)&lt;/span&gt;，分类正确；&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(w\cdot x_i+b\geqslant0\)&lt;/span&gt;,&lt;span class="math"&gt;\(\ y_i=-1\)&lt;/span&gt;，分类错误；&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(w\cdot x_i+b&amp;lt;0\)&lt;/span&gt;,&lt;span class="math"&gt;\(\ y_i=-1\)&lt;/span&gt;，分类正确；&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(w\cdot x_i+b&amp;lt;0\)&lt;/span&gt;,&lt;span class="math"&gt;\(\ y_i=+1\)&lt;/span&gt;，分类错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此分类错误的数据点 &lt;span class="math"&gt;\((x_i,y_i)\)&lt;/span&gt; 满足&lt;/p&gt;
&lt;div class="math"&gt;$$-y_i(w\cdot x_i+b)&amp;gt;0$$&lt;/div&gt;
&lt;p&gt;若超平面 &lt;span class="math"&gt;\(S\)&lt;/span&gt; 误分类的点的集合为 &lt;span class="math"&gt;\(M\)&lt;/span&gt;，那么误分类点到超平面的距离之和为&lt;/p&gt;
&lt;div class="math"&gt;$$\sum_{x_i\in M}\left[-\frac{1}{||w||}y_i(w\cdot x_i+b)\right]$$&lt;/div&gt;
&lt;p&gt;略去 &lt;span class="math"&gt;\(\frac{1}{||w||}\)&lt;/span&gt;（见第七章），得到&lt;em&gt;经验风险函数&lt;/em&gt;：&lt;/p&gt;
&lt;div class="math"&gt;$$L(w,b)=-\sum_{x_i\in M}y_i(w\cdot x_i+b)$$&lt;/div&gt;
&lt;p&gt;感知机的学习策略就是在假设空间中选取 &lt;span class="math"&gt;\(L(w,b)\)&lt;/span&gt; 最小的模型参数 &lt;span class="math"&gt;\(w\)&lt;/span&gt; 和 &lt;span class="math"&gt;\(b\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id="suan-fa"&gt;算法&lt;/h2&gt;
&lt;p&gt;感知机的学习算法就是求解以下最优化问题的算法：&lt;/p&gt;
&lt;div class="math"&gt;$$\min_{w,b}L(w,b)=-\sum_{x_i\in M}y_i(w\cdot x_i+b)$$&lt;/div&gt;
&lt;h3 id="sui-ji-ti-du-xia-jiang-fa"&gt;随机梯度下降法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;任意选取超平面 &lt;span class="math"&gt;\(w_0\cdot x+b_0=0\)&lt;/span&gt;;&lt;/li&gt;
&lt;li&gt;随机选取误分类点使 &lt;span class="math"&gt;\(L(w,b)\)&lt;/span&gt; 梯度下降；&lt;/li&gt;
&lt;li&gt;不断更新 &lt;span class="math"&gt;\(w\)&lt;/span&gt; 与 &lt;span class="math"&gt;\(b\)&lt;/span&gt;，直至 &lt;span class="math"&gt;\(L(w,b)=0\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二元函数 &lt;span class="math"&gt;\(f(x,y)\)&lt;/span&gt; 在 &lt;span class="math"&gt;\((x_0,y_0)\)&lt;/span&gt; 处的梯度定义为&lt;/p&gt;
&lt;div class="math"&gt;$$\mathbf{grad}\ f(x_0,y_0)=\nabla f(x_0,y_0)=f_x(x_0,y_0)\boldsymbol{i}+f_y(x_0,y_0)\boldsymbol{j}$$&lt;/div&gt;
&lt;p&gt;因此损失函数 &lt;span class="math"&gt;\(L(w,b)\)&lt;/span&gt; 的梯度为&lt;/p&gt;
&lt;div class="math"&gt;$$\nabla_wL(w,b)=\frac{\partial\left[-\sum_{x_i\in M}\color{orangered}{y_i}(w\cdot \color{orangered}{x_i}+b)\right]}{\partial w}=-\sum_{x_i\in M}\color{orangered}{y_ix_i}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\nabla_bL(w,b)=\frac{\partial\left[-\sum_{x_i\in M}\color{orangered}{y_i}(w\cdot x_i+b)\right]}{\partial b}=-\sum_{x_i\in M}\color{orangered}{y_i}$$&lt;/div&gt;
&lt;p&gt;随机选择误分类点 &lt;span class="math"&gt;\((x_i,y_i)\)&lt;/span&gt; 更新 &lt;span class="math"&gt;\(w\)&lt;/span&gt; 与 &lt;span class="math"&gt;\(b\)&lt;/span&gt;，使 &lt;span class="math"&gt;\(L(w,b)\)&lt;/span&gt; 沿梯度方向下降：&lt;/p&gt;
&lt;div class="math"&gt;$$w\leftarrow w+\eta y_ix_i$$&lt;/div&gt;
&lt;div class="math"&gt;$$b\leftarrow b+\eta y_i$$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(\eta\ (0&amp;lt;\eta\leqslant1)\)&lt;/span&gt; 称为步长，不断迭代至 &lt;span class="math"&gt;\(L(w,b)=0\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id="yuan-shi-xing-shi-suan-fa"&gt;原始形式算法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;算法2.1&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入：训练集 &lt;span class="math"&gt;\(T\)&lt;/span&gt;，学习率 &lt;span class="math"&gt;\(\eta\)&lt;/span&gt;&lt;br/&gt;
输出：&lt;span class="math"&gt;\(w\)&lt;/span&gt; 与 &lt;span class="math"&gt;\(b\)&lt;/span&gt; ，感知机模型 &lt;span class="math"&gt;\(f(x)=\mathrm{sign}(w\cdot x+b)\)&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;设定步长 &lt;span class="math"&gt;\(\eta\)&lt;/span&gt;，选取初值 &lt;span class="math"&gt;\(w_0\)&lt;/span&gt; 与 &lt;span class="math"&gt;\(b_0\)&lt;/span&gt;，一般为 &lt;span class="math"&gt;\(w_0=0\)&lt;/span&gt;，&lt;span class="math"&gt;\(b_0=0\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;选取点 &lt;span class="math"&gt;\((x_i,y_i)\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;若 &lt;span class="math"&gt;\(y_i(w\cdot x_i+b)\leqslant0\)&lt;/span&gt;，&lt;div class="math"&gt;$$w\leftarrow w+\eta y_ix_i$$&lt;/div&gt;
&lt;div class="math"&gt;$$b\leftarrow b+\eta y_i$$&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;重复步骤（2），直至没有误分类点，即 &lt;span class="math"&gt;\(L(w,b)=0\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="dui-ou-xing-shi-suan-fa"&gt;对偶形式算法&lt;/h3&gt;
&lt;p&gt;经过数次以下迭代步骤：&lt;/p&gt;
&lt;div class="math"&gt;$$w\leftarrow w+\eta y_ix_i$$&lt;/div&gt;
&lt;div class="math"&gt;$$b\leftarrow b+\eta y_i$$&lt;/div&gt;
&lt;p&gt;&lt;em&gt;最终的&lt;/em&gt; &lt;span class="math"&gt;\(w\)&lt;/span&gt; 和 &lt;span class="math"&gt;\(b\)&lt;/span&gt; 可以表示为&lt;/p&gt;
&lt;div class="math"&gt;$$w=\sum_{i=1}^N \alpha_iy_ix_i$$&lt;/div&gt;
&lt;div class="math"&gt;$$b=\sum_{i=1}^N\alpha_iy_i$$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(\alpha_i=n_i\eta\)&lt;/span&gt;，&lt;span class="math"&gt;\(n_i\)&lt;/span&gt; 表示点 &lt;span class="math"&gt;\((x_i,y_i)\)&lt;/span&gt; 被误分类的次数。也就是说，在迭代的每一次过程中，被误分类的点 &lt;span class="math"&gt;\((x_i,y_i)\)&lt;/span&gt; 都不断向超平面靠近，直至位于超平面的另一侧。&lt;/p&gt;
&lt;p&gt;最后得到的感知机模型应为&lt;/p&gt;
&lt;div class="math"&gt;$$f(x)=\mathrm{sign}\left(\sum_{i=1}^N\alpha_iy_ix_i\cdot x+b\right)$$&lt;/div&gt;
&lt;p&gt;为了与 &lt;span class="math"&gt;\(x=x_i\)&lt;/span&gt; 代入后的模型相区别，表示为&lt;/p&gt;
&lt;div class="math"&gt;$$f(x)=\mathrm{sign}\left(\sum_{j=1}^N\alpha_jy_jx_j\cdot x+b\right)$$&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;算法2.2&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入：训练集 &lt;span class="math"&gt;\(T\)&lt;/span&gt;，学习率 &lt;span class="math"&gt;\(\eta\)&lt;/span&gt;&lt;br/&gt;
输出：&lt;span class="math"&gt;\(\alpha\)&lt;/span&gt; 与 &lt;span class="math"&gt;\(b\)&lt;/span&gt; ，感知机模型 &lt;span class="math"&gt;\(f(x)=\mathrm{sign}\left(\sum_{j=1}^N\alpha_iy_jx_j\cdot x+b\right)\)&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;设定步长 &lt;span class="math"&gt;\(\eta\)&lt;/span&gt;，选取初值 &lt;span class="math"&gt;\(\alpha\)&lt;/span&gt; 与 &lt;span class="math"&gt;\(b_0\)&lt;/span&gt;，一般为 &lt;span class="math"&gt;\(\alpha=(\alpha_1,\alpha_2,\cdots,\alpha_N)^\mathrm{T}=0\)&lt;/span&gt;，&lt;span class="math"&gt;\(b_0=0\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;选取点 &lt;span class="math"&gt;\((x_i,y_i)\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;若&lt;span class="math"&gt;\(y_i\left(\sum_{j=1}^N\alpha_jy_jx_j\cdot x_i+b\right)\leqslant0\)&lt;/span&gt;，&lt;div class="math"&gt;$$\alpha_i\leftarrow\alpha_i+\eta$$&lt;/div&gt;
&lt;div class="math"&gt;$$b\leftarrow b+\eta y_i$$&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;重复步骤（2），直至没有误分类点。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;考虑迭代的判断条件&lt;/p&gt;
&lt;div class="math"&gt;$$y_i\left(\sum_{j=1}^N\alpha_jy_j\vec{x_j}\cdot \vec{x_i}+b\right)\leqslant0$$&lt;/div&gt;
&lt;p&gt;每次判断都需要计算&lt;/p&gt;
&lt;div class="math"&gt;$$\sum_{j=1}^N\alpha_jy_j\color{orangered}{\vec{x_j}\cdot \vec{x_i}}=\alpha_1y_1\color{orangered}{\vec{x_1}\cdot\vec{x_i}}+\alpha_2y_2\color{orangered}{\vec{x_2}\cdot\vec{x_i}}+\cdots+\alpha_Ny_N\color{orangered}{\vec{x_N}\cdot\vec{x_i}}$$&lt;/div&gt;
&lt;p&gt;因此可以将内积以矩阵形式存放，即 Gram 矩阵：&lt;/p&gt;
&lt;div class="math"&gt;$$\boldsymbol{G}=[x_i\cdot x_j]_{N\times N}=\begin{bmatrix}
    x_1\cdot x_1 &amp;amp;\cdots &amp;amp;x_1\cdot x_N\\
    \vdots       &amp;amp;\ddots &amp;amp;\vdots\\
    x_N\cdot x_1 &amp;amp;\cdots &amp;amp;x_N\cdot x_N
\end{bmatrix}$$&lt;/div&gt;
&lt;p&gt;由于内积的性质，Gram 矩阵实际上是一个对称矩阵。&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="references_1"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/33437381/"&gt;李航, 2019. 统计学习方法（第2版）. 清华大学出版社.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="碎碎念"></category><category term="统计学习方法"></category><category term="Machine learning"></category><category term="Algorithm"></category></entry><entry><title>《统计学习方法》第一章：概论</title><link href="https://tseing.github.io/sui-sui-nian/2022-07-21-statistical-learning-chapter1.html" rel="alternate"></link><published>2022-07-21T00:00:00+08:00</published><updated>2022-07-21T00:00:00+08:00</updated><author><name>Leo</name></author><id>tag:tseing.github.io,2022-07-21:/sui-sui-nian/2022-07-21-statistical-learning-chapter1.html</id><summary type="html">&lt;p&gt;《统计学习方法》的第一章主要介绍了统计学习的基本概念与监督学习的分类。&lt;/p&gt;</summary><content type="html">&lt;h2 id="ji-ben-gai-nian"&gt;基本概念&lt;/h2&gt;
&lt;h3 id="tong-ji-xue-xi-guo-cheng"&gt;统计学习过程&lt;/h3&gt;
&lt;p&gt;统计学习主要基于数据概率构建概率统计模型并运用模型分析和预测数据，统计学习的主要过程可以归纳为：&lt;/p&gt;
&lt;div class="math"&gt;$$\boxed{\frac{训练数据集}{T=\{(x_i,y_i)\}}}\stackrel{学习}{\Longrightarrow}\boxed{\frac{模型}{P(Y|X)\ \mathrm{or}\ Y=f(X)}}\stackrel{预测}{\Longrightarrow}y_{N+1}$$&lt;/div&gt;
&lt;p&gt;其中，训练集表示为：&lt;/p&gt;
&lt;div class="math"&gt;$$
T=\{ (x_1,y_1),(x_2,y_2),\cdots,(x_N,y_N) \}
$$&lt;/div&gt;
&lt;p&gt;其中输入变量 &lt;span class="math"&gt;\(X\)&lt;/span&gt; 的取值 &lt;span class="math"&gt;\(x_i\)&lt;/span&gt; 为特征向量：&lt;/p&gt;
&lt;div class="math"&gt;$$
x_i=(x^{(1)}_i,x^{(2)}_i,\cdots,x^{(n)}_i)^\mathrm{T}
$$&lt;/div&gt;
&lt;p&gt;输入变量 &lt;span class="math"&gt;\(X\)&lt;/span&gt; 与输出变量 &lt;span class="math"&gt;\(Y\)&lt;/span&gt; 遵循联合概率分布 &lt;span class="math"&gt;\(P(X,Y)\)&lt;/span&gt;，经过学习得到的模型可以是概率模型 &lt;span class="math"&gt;\(P(Y|X)\)&lt;/span&gt;，也可以是非概率模型 &lt;span class="math"&gt;\(Y=f(X)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id="gai-lu-mo-xing-yu-fei-gai-lu-mo-xing"&gt;概率模型与非概率模型&lt;/h3&gt;
&lt;p&gt;在监督学习中，概率模型为条件概率分布形式 &lt;span class="math"&gt;\(P(y|x)\)&lt;/span&gt;，非概率模型为决策函数形式 &lt;span class="math"&gt;\(y=f(x)\)&lt;/span&gt;；在无监督学习中，概率模型为 &lt;span class="math"&gt;\(P(z|x)\)&lt;/span&gt; 或 &lt;span class="math"&gt;\(P(x|z)\)&lt;/span&gt;，非概率模型为隐函数形式 &lt;span class="math"&gt;\(z=g(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class="math"&gt;$$P(y|x)\underset{归一化}{\overset{最大化}{\rightleftharpoons}} y=f(x)$$&lt;/div&gt;
&lt;p&gt;由于 &lt;span class="math"&gt;\(P(y|x)\)&lt;/span&gt; 与 &lt;span class="math"&gt;\(y=f(x)\)&lt;/span&gt; 可以按照上述过程转化，所以概率模型与非概率模型不仅仅是在表现形式存在差异，更为重要的是在内部结构上，概率模型的变量、参数符合一定的联合概率分布，这也决定了概率模型符合以下基本概率公式：&lt;/p&gt;
&lt;div class="math"&gt;$$P(x)=\sum_y P(x,y)$$&lt;/div&gt;
&lt;div class="math"&gt;$$P(x,y)=P(x)P(y|x)$$&lt;/div&gt;
&lt;h2 id="tong-ji-xue-xi-fang-fa-san-yao-su_1"&gt;统计学习方法三要素&lt;/h2&gt;
&lt;h3 id="mo-xing"&gt;模型&lt;/h3&gt;
&lt;p&gt;模型就是需要学习的条件分布概率或决策函数，由假设模型构成的集合称为假设空间，可以表示为：&lt;/p&gt;
&lt;div class="math"&gt;$$\mathcal{F}=\{f|Y=f_\theta(X),\theta\in\mathbf{R}^n\}$$&lt;/div&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;div class="math"&gt;$$\mathcal{F}=\{P|P_\theta(Y|X),\theta\in\mathbf{R}^n\}$$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; 为模型的参数向量，&lt;span class="math"&gt;\(\mathbf{R}^n\)&lt;/span&gt; 称为参数空间。&lt;/p&gt;
&lt;h3 id="ce-lue"&gt;策略&lt;/h3&gt;
&lt;p&gt;在假设空间中选择最优模型的方法称之为策略。&lt;/p&gt;
&lt;h4&gt;损失函数和风险函数&lt;/h4&gt;
&lt;p&gt;用损失函数能够衡量模型预测值 &lt;span class="math"&gt;\(f(X)\)&lt;/span&gt; 与真实值 &lt;span class="math"&gt;\(Y\)&lt;/span&gt; 的差距，从而评估模型的优劣。损失函数记作 &lt;span class="math"&gt;\(L(Y,f(X))\)&lt;/span&gt;，例如常见的平方损失函数定义为：&lt;/p&gt;
&lt;div class="math"&gt;$$L(Y,f(X))=(Y-f(X))^2$$&lt;/div&gt;
&lt;p&gt;输入变量 &lt;span class="math"&gt;\(X\)&lt;/span&gt; 与输出变量 &lt;span class="math"&gt;\(Y\)&lt;/span&gt; 遵循联合概率分布 &lt;span class="math"&gt;\(P(X,Y)\)&lt;/span&gt;，损失函数的期望为：&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}
    R_{\mathrm{exp}}(f)&amp;amp;=E_P[L(Y,f(X))]\\
    &amp;amp;= \int_{\mathcal{X}\times\mathcal{Y}}L(y,f(x))P(x,y)\mathrm{d}x\mathrm{d}y\\
\end{align}$$&lt;/div&gt;
&lt;p&gt;该期望就是模型 &lt;span class="math"&gt;\(f(X)\)&lt;/span&gt; 在联合分布 &lt;span class="math"&gt;\(P(X,Y)\)&lt;/span&gt; 平均意义下的损失，称为风险函数。但由于 &lt;span class="math"&gt;\(P(X,Y)\)&lt;/span&gt; 无法确定，风险函数也无法计算，因此定义了能够确定的经验风险。经验风险是模型 &lt;span class="math"&gt;\(f(X)\)&lt;/span&gt; 在训练集 &lt;span class="math"&gt;\(T\)&lt;/span&gt; 中的平均损失：&lt;/p&gt;
&lt;div class="math"&gt;$$R_{\mathrm{rmp}}(f)=\frac{1}{N}\sum_{i=1}^NL(y_i,f(x_i))$$&lt;/div&gt;
&lt;p&gt;当样本容量 &lt;span class="math"&gt;\(N\)&lt;/span&gt; 趋向于无穷时，经验风险 &lt;span class="math"&gt;\(R_{\mathrm{rmp}}\)&lt;/span&gt; 趋于期望风险 &lt;span class="math"&gt;\(R_{\mathrm{exp}}\)&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;经验风险最小化与结构风险最小化&lt;/h4&gt;
&lt;p&gt;经验风险最小化策略通过寻找经验风险最小的模型作为最优模型，经验风险最小化策略需要足够大的样本容量，否则容易出现过拟合。经验风险最小化策本质为求解最优化问题：&lt;/p&gt;
&lt;div class="math"&gt;$$\min_{f\in\mathcal{F}}\frac{1}{N}L(y_i,f(x_i))$$&lt;/div&gt;
&lt;p&gt;结构风险最小化策略是防止过拟合的策略，其本质为求解最优化问题：&lt;/p&gt;
&lt;div class="math"&gt;$$\min_{f\in\mathcal{F}}\frac{1}{N}L(y_i,f(x_i))+\lambda J(f)$$&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math"&gt;\(J(f)\)&lt;/span&gt; 是模型的复杂度，表示对复杂模型的惩罚，&lt;span class="math"&gt;\(\lambda\)&lt;/span&gt; 为系数。&lt;/p&gt;
&lt;h3 id="suan-fa"&gt;算法&lt;/h3&gt;
&lt;p&gt;算法是学习模型的具体计算方法。&lt;/p&gt;
&lt;h2 id="fan-hua_1"&gt;泛化&lt;/h2&gt;
&lt;h3 id="fan-hua-wu-chai"&gt;泛化误差&lt;/h3&gt;
&lt;p&gt;泛化能力是学习得到的模型对未知数据的预测能力，学习得到的模型对未知项进行预测的误差称为泛化误差，泛化误差等同于模型 &lt;span class="math"&gt;\(\hat{f}\)&lt;/span&gt; 的期望风险：&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}
    R_{\mathrm{exp}}(\hat{f})&amp;amp;=E_P[L(Y,\hat{f}(X))]\\
    &amp;amp;= \int_{\mathcal{X}\times\mathcal{Y}}L(y,\hat{f}(x))P(x,y)\mathrm{d}x\mathrm{d}y\\
\end{align}$$&lt;/div&gt;
&lt;h3 id="er-fen-lei-wen-ti-de-fan-hua-wu-chai-shang-jie"&gt;二分类问题的泛化误差上界&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;定理 1.1&lt;/strong&gt; 对于二分类问题，当假设空间是有限个函数的集合
 &lt;span class="math"&gt;\(\mathcal{F}=\{ f_1,f_2,\cdots,f_d\}\)&lt;/span&gt; 时，对任意一个函数 &lt;span class="math"&gt;\(f\in \mathcal{F}\)&lt;/span&gt;，至少以概率 &lt;span class="math"&gt;\(1-\delta\)&lt;/span&gt;，&lt;span class="math"&gt;\(0&amp;lt;\delta&amp;lt;1\)&lt;/span&gt;，以下不等式成立（证明见参考）：&lt;/p&gt;
&lt;div class="math"&gt;$$R(f)\leq\hat{R}(f)+\varepsilon(d,N,\delta)$$&lt;/div&gt;
&lt;div class="math"&gt;$$\varepsilon(d,N\delta)=\sqrt{\frac{1}{2N}(\log d+\log\frac{1}{\delta})}$$&lt;/div&gt;
&lt;p&gt;&lt;span class="math"&gt;\(R(f)\)&lt;/span&gt; 为泛化误差，&lt;span class="math"&gt;\(\hat{R}(f)\)&lt;/span&gt; 为训练误差。&lt;/p&gt;
&lt;p&gt;泛化误差上界的性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;样本容量增加，泛化上界趋于0；&lt;/li&gt;
&lt;li&gt;假设空间越大，泛化上界越大。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="jian-du-xue-xi-de-ying-yong_1"&gt;监督学习的应用&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;输入变量 X&lt;/th&gt;
&lt;th&gt;输出变量 Y&lt;/th&gt;
&lt;th&gt;问题&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;离散变量&lt;/td&gt;
&lt;td&gt;分类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;变量序列&lt;/td&gt;
&lt;td&gt;变量序列&lt;/td&gt;
&lt;td&gt;标注&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;连续变量&lt;/td&gt;
&lt;td&gt;连续变量&lt;/td&gt;
&lt;td&gt;回归&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr/&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/33437381/"&gt;李航, 2019. 统计学习方法（第2版）. 清华大学出版社.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cnblogs.com/pastispast/p/12589078.html"&gt;二分类问题泛化误差上界的详细证明 - p_is_p - 博客园&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="碎碎念"></category><category term="统计学习方法"></category><category term="Machine learning"></category></entry><entry><title>在 Linux 上使用 OneDrive 作为博客图床</title><link href="https://tseing.github.io/sui-sui-nian/2022-07-14-onedrive-as-image-host.html" rel="alternate"></link><published>2022-07-14T00:00:00+08:00</published><updated>2022-07-14T00:00:00+08:00</updated><author><name>Leo</name></author><id>tag:tseing.github.io,2022-07-14:/sui-sui-nian/2022-07-14-onedrive-as-image-host.html</id><summary type="html">&lt;p&gt;在博客中插入图片一直是一件头疼事，互联网上的各类图床工具都难令人完全满意。使用 OneDrive 作为图床或是一个很好的选择，这在 Windows 上已经有了成熟的方案，而在 Linux 上就有些麻烦，需要借助些额外的工具。&lt;/p&gt;</summary><content type="html">&lt;p&gt;在个人博客中，图片是不可或缺的，而生成图片的直链后才能在 &lt;code&gt;.md&lt;/code&gt; 文件中使用，因此通常又需要图床等额外工具。由于国内市场的图床工具良莠不齐，没有精力仔细挑选，还有就是把数据交在他们的手中多少有些不放心。想到订阅 Microsoft Office 时附赠了 1 TB 的 OneDrive 容量，正好可以利用起来。使用 OneDrive 作为图床的好处就在于数据在自己的手中，不用担心某天突然挂掉，还有就是在多平台（Windows、iPad 和 Android）都有 OneDrive 应用，很方便同步。但是很遗憾，由于国内的环境，OneDrive 的网页版是打不开的，这就不能通过网页版直接生成图片链接，必须「绕道通行」。&lt;/p&gt;
&lt;p&gt;Windows 系统自带 OneDrive 应用，可以直接使用桌面应用进行文件同步，借助 &lt;a href="https://github.com/Richasy/Img-Share"&gt;Img Share&lt;/a&gt; 生成图片链接。Img Share 后来被 &lt;a href="https://apps.microsoft.com/store/detail/picture-share/9PHWZ3QL0HN3?hl=en-us&amp;amp;gl=US"&gt;Picture Share&lt;/a&gt; 代替，在 Microsoft Store 中就可以直接下载到。Picture Share 十分容易上手，界面简洁且功能齐全，具体的设置方法可以参考&lt;a href="https://wzblog.fun/posts/b036879a/"&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;但是写博客的工作环境是 Linux 系统，Linux 系统中没有 OneDrive 应用和上述 UWP 应用，也就不能使用上面的方法。本文就将介绍如何在 Linux 系统下使用 OneDrive 作为个人博客的图床并使用ZFile同步云盘文件。&lt;/p&gt;
&lt;h2 id="onedrive-wen-jian-lian-jie-de-sheng-cheng-fang-shi"&gt;OneDrive 文件链接的生成方式&lt;/h2&gt;
&lt;p&gt;OneDrive 的网页应用直接提供了嵌入代码，可以直接贴在文章中。但因为科学上网时上传速度相当感人，使用起来还是太过麻烦。虽然无法访问 OneDrive 网页，但 OneDrive 在国内的其他功能都是正常的，包括生成的分享链接，所以直接借用官方API生成链接的方案是可行的。发现有人已经写好了&lt;a href="https://github.com/harrisoff/onedrive-image-hosting"&gt;相关项目&lt;/a&gt;，点开项目右侧的链接登录自己的OneDrive后直接插入 &lt;code&gt;.md&lt;/code&gt; 就可以啦。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;![图片名称](https://api.onedrive.com/v1.0/shares/s!AtseC45rsRhNuUZNJKuT3c_gI4Jh/root/content)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="an-zhuang-zfile"&gt;安装 ZFile&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/zhaojun1998/zfile"&gt;ZFile&lt;/a&gt; 是一款在线网盘程序，支持包括 OneDrive 在内的多种存储源。ZFile 可以代替其他平台的 OneDrive 应用来管理云盘中的文件，实现同步、上传、下载等功能。ZFile 也能生成文件直链插入文章，但是这个功能需要云服务器，抱着能省则省的态度，就等以后再折腾，这里仅使用 ZFile 来管理 OneDrive。&lt;/p&gt;
&lt;p&gt;在 Linux 系统使用 ZFile 首先需要安装依赖：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Debian 10&lt;/span&gt;
apt update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt install -y apt-transport-https software-properties-common ca-certificates dirmngr gnupg
wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public &lt;span class="p"&gt;|&lt;/span&gt; apt-key add -
add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/
apt update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt install -y adoptopenjdk-8-hotspot-jre
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下载 ZFile：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;ZFILE_INSTALL_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/zfile
mkdir -p &lt;span class="nv"&gt;$ZFILE_INSTALL_PATH&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$ZFILE_INSTALL_PATH&lt;/span&gt;
wget https://c.jun6.net/ZFILE/zfile-release.war
unzip zfile-release.war &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf zfile-release.war
chmod +x &lt;span class="nv"&gt;$ZFILE_INSTALL_PATH&lt;/span&gt;/bin/*.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ZFILE_INSTALL_PATH&lt;/code&gt; 指定了安装路径，可以自行修改。&lt;/p&gt;
&lt;h2 id="qi-dong-bing-pei-zhi-zfile"&gt;启动并配置 ZFile&lt;/h2&gt;
&lt;p&gt;通过以下命令启动 ZFile：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ~/zfile/bin/start.sh       &lt;span class="c1"&gt;# 启动项目&lt;/span&gt;
 ~/zfile/bin/stop.sh        &lt;span class="c1"&gt;# 停止项目&lt;/span&gt;
 ~/zfile/bin/restart.sh     &lt;span class="c1"&gt;# 重启项目&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动项目后，默认开放在 8080 端口，使用 &lt;code&gt;localhost:8080&lt;/code&gt; 进入 ZFile：
&lt;img alt="注册/登录界面" src="https://api.onedrive.com/v1.0/shares/s!AtseC45rsRhNuUeZko02sAbyr5jh/root/content"/&gt;首次开启时需要注册管理员账号，登录进入系统后，首先配置存储源，选择存储策略为 &lt;code&gt;OneDrive&lt;/code&gt;，启用文件操作。
&lt;img alt="配置存储源" src="https://api.onedrive.com/v1.0/shares/s!AtseC45rsRhNuUUBsSGYxpEV6Frp/root/content"/&gt;点击链接登录 OneDrive 账号获取令牌，填写完成后即可保存设置。&lt;img alt="获取令牌" src="https://api.onedrive.com/v1.0/shares/s!AtseC45rsRhNuUPS4i5g5F_-nR4T/root/content"/&gt;设置成功后在存储源中就可以看见 OneDrive 标志，并且显示刷新成功，这样 ZFile 就已经正常工作了。&lt;img alt="存储源列表" src="https://api.onedrive.com/v1.0/shares/s!AtseC45rsRhNuUSMlwPi40T-1Um4/root/content"/&gt;&lt;/p&gt;
&lt;h2 id="shi-yong-zfile-guan-li-onedrive"&gt;使用 ZFile 管理 OneDrive&lt;/h2&gt;
&lt;p&gt;在地址栏中输入 &lt;code&gt;localhost:8080&lt;/code&gt; 进入存储界面，在这里就理应能够看到 OneDrive 中存储的文件了，可以使用其他设备辅助测试是否能够正常上传或删除文件。&lt;/p&gt;
&lt;p&gt;如果有一台 VPS，在 VPS 上启动 ZFile 后，通过 &lt;code&gt;vps-ip:[port]&lt;/code&gt; 也能进入同样的管理界面。只需要将图片文件上传至 OneDrive，使用ZFile就可以得到文件的直链，不止是图片，这种方法还可以在 &lt;code&gt;.md&lt;/code&gt; 中插入音频或是视频文件，甚至搭建个人下载站，而且完全不占用服务器存储。值得注意的是，ZFile获得的文件「直链」并不是真正的直链，而是经过一次转发，可能会影响访问速度。&lt;img alt="ZFile获取直链流程" src="https://storage.live.com/items/4D18B16B8E0B1EDB!7369?authkey=ALYpzW-ZQ_VBXTU"/&gt;因为 ZFile 向 OneDrive 请求得到是预览链接或临时下载链接 &lt;code&gt;1drv.com/...&lt;/code&gt;，该链接在一段时间后就会失效，也不能直接用作图床。当用户每次访问ZFile直链 &lt;code&gt;vps-ip:[port]/...&lt;/code&gt; 时，实际得到的都是Z File 转发得到的 OneDrive 临时链接。&lt;/p&gt;</content><category term="碎碎念"></category><category term="Blog"></category><category term="OneDrive"></category><category term="Linux"></category></entry><entry><title>使用 Pelican 发布文章的流程</title><link href="https://tseing.github.io/sui-sui-nian/2022-07-12-pelican-to-publish.html" rel="alternate"></link><published>2022-07-12T00:00:00+08:00</published><updated>2022-07-12T00:00:00+08:00</updated><author><name>Leo</name></author><id>tag:tseing.github.io,2022-07-12:/sui-sui-nian/2022-07-12-pelican-to-publish.html</id><summary type="html">&lt;p&gt;经过一番折腾，我的博客终于可以工作啦。但也所谓的「工作」也只是能显示罢了，后续的美化和插件部署免不了又是一通的麻烦事。暂且不论这些，先记录下使用 Pelican 在 Github Pages 上发布博客文章的流程。&lt;/p&gt;</summary><content type="html">&lt;h2 id="articles-or-pages"&gt;Articles or Pages?&lt;/h2&gt;
&lt;p&gt;Pelican 中有 articles 与 pages 的概念，在创建页面时应当首先区分二者。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;articles&lt;/strong&gt; 指具有时间戳的内容，例如博客文章等，直接创建在&lt;code&gt;content&lt;/code&gt;文件夹中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pages&lt;/strong&gt; 指与时间无关、展示固定内容的页面，需要创建在&lt;code&gt;content/pages&lt;/code&gt;文件夹下&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="zhuan-xie-wen-zhang"&gt;撰写文章&lt;/h2&gt;
&lt;h3 id="jupyter-notebook-fang-shi"&gt;Jupyter Notebook 方式&lt;/h3&gt;
&lt;p&gt;Jupyter Notebook 能够保存下代码的输入与输出信息，特别适合用于展示程序输出的图形。首先在&lt;code&gt;content&lt;/code&gt;目录中创建&lt;code&gt;.nbdata&lt;/code&gt;与&lt;code&gt;.ipynb&lt;/code&gt;的同名文件。&lt;code&gt;.nbdata&lt;/code&gt;文件中保存了文章的结构信息，而&lt;code&gt;.ipynb&lt;/code&gt;使用 Jupyter Notebook 保存了文章的具体内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;title: # 文章标题
slug: # 文章地址
date: # 时间
category: # 类别
tags: # 标签
author: # 作者
summary: # 概要

# 其他不常用信息
modified: # 修改时间
keywords: # 仅用于html内容
authors: # 多作者
lang: # 语言
translation: # 是否属于译文
status: # draft, hidden, or published
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="markdown-fang-shi"&gt;Markdown 方式&lt;/h3&gt;
&lt;p&gt;使用 Markdown 语言是写博客最为简单普遍的方式，在&lt;code&gt;content&lt;/code&gt;文件夹中创建&lt;code&gt;.md&lt;/code&gt;文件，在开始部分首先输入与&lt;code&gt;.nbdata&lt;/code&gt;相同的文章信息后，就可以直接开始撰写正文。&lt;/p&gt;
&lt;h2 id="sheng-cheng-jing-tai-wang-ye_1"&gt;生成静态网页&lt;/h2&gt;
&lt;p&gt;在撰写文章后，进入虚拟环境，在 &lt;code&gt;blog&lt;/code&gt; 文件夹中使用 &lt;code&gt;Pelican&lt;/code&gt; 生成 &lt;code&gt;.html&lt;/code&gt; 文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ./venv/bin/activate
pelican content -s publishconf.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后将 &lt;code&gt;output&lt;/code&gt; 文件夹同步至 Github 中 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; 仓库即完成文章的发布。&lt;/p&gt;
&lt;h2 id="fa-bu"&gt;发布&lt;/h2&gt;
&lt;p&gt;使用终端在 &lt;code&gt;blog&lt;/code&gt; 文件夹中输入 &lt;code&gt;pelican -lr&lt;/code&gt; 即可自动部署到本地服务器，默认端口为 8000，通过 &lt;code&gt;localhost:8000&lt;/code&gt; 访问。&lt;/p&gt;
&lt;p&gt;测试完成后将内容推送至 Github:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git add .
git commit
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="ke-long-yu-tong-bu"&gt;克隆与同步&lt;/h2&gt;
&lt;p&gt;由于我有 Windows 与 Linux 两个平台的设备，所以需要在两个平台上同步博客的内容，方便我在任意设备上都可以写文章。&lt;/p&gt;
&lt;p&gt;在终端中使用 &lt;code&gt;git clone --recursive&lt;/code&gt; 命令克隆仓库，&lt;code&gt;git clone&lt;/code&gt; 命令只会克隆主仓库，导致子模块失效，&lt;code&gt;--recursive&lt;/code&gt; 能递归地克隆包括子模块在内的整个仓库。使用 &lt;code&gt;git pull --recurse-submodules&lt;/code&gt; 命令能够拉取包含子模块在内的全部更新，即可完成同步。&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.getpelican.com/en/latest/settings.html"&gt;Pelican Settings Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zodiac911.github.io/blog/static-blog.html#%E7%B3%BB%E7%BB%9F%E8%A6%81%E6%B1%82"&gt;Pelican + GitHubPages 搭建个人博客 &amp;middot; Zodiac Wang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="碎碎念"></category><category term="Blog"></category><category term="Pelican"></category></entry></feed>